/*
 * This file is generated by jOOQ.
*/
package com.cimne.tic.oko.server.ws.model.tables;


import com.cimne.tic.oko.server.ws.model.Keys;
import com.cimne.tic.oko.server.ws.model.Oko;
import com.cimne.tic.oko.server.ws.model.tables.records.UsuariosRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Usuarios extends TableImpl<UsuariosRecord> {

    private static final long serialVersionUID = -1853279781;

    /**
     * The reference instance of <code>oko.Usuarios</code>
     */
    public static final Usuarios USUARIOS = new Usuarios();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UsuariosRecord> getRecordType() {
        return UsuariosRecord.class;
    }

    /**
     * The column <code>oko.Usuarios.idUsuario</code>.
     */
    public final TableField<UsuariosRecord, Integer> IDUSUARIO = createField("idUsuario", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.Usuarios.nombre</code>.
     */
    public final TableField<UsuariosRecord, String> NOMBRE = createField("nombre", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false), this, "");

    /**
     * The column <code>oko.Usuarios.email</code>.
     */
    public final TableField<UsuariosRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>oko.Usuarios.telefono</code>.
     */
    public final TableField<UsuariosRecord, String> TELEFONO = createField("telefono", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>oko.Usuarios.pwd</code>.
     */
    public final TableField<UsuariosRecord, String> PWD = createField("pwd", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>oko.Usuarios.salt</code>.
     */
    public final TableField<UsuariosRecord, String> SALT = createField("salt", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>oko.Usuarios.urlAvatar</code>.
     */
    public final TableField<UsuariosRecord, String> URLAVATAR = createField("urlAvatar", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "");

    /**
     * The column <code>oko.Usuarios.apiKey</code>.
     */
    public final TableField<UsuariosRecord, String> APIKEY = createField("apiKey", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>oko.Usuarios.userGuid</code>.
     */
    public final TableField<UsuariosRecord, String> USERGUID = createField("userGuid", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>oko.Usuarios.idioma</code>.
     */
    public final TableField<UsuariosRecord, String> IDIOMA = createField("idioma", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>oko.Usuarios.emailValidado</code>.
     */
    public final TableField<UsuariosRecord, Integer> EMAILVALIDADO = createField("emailValidado", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>oko.Usuarios.telefonoValidado</code>.
     */
    public final TableField<UsuariosRecord, Integer> TELEFONOVALIDADO = createField("telefonoValidado", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>oko.Usuarios.lastLogin</code>.
     */
    public final TableField<UsuariosRecord, Timestamp> LASTLOGIN = createField("lastLogin", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>oko.Usuarios.fechaInsert</code>.
     */
    public final TableField<UsuariosRecord, Timestamp> FECHAINSERT = createField("fechaInsert", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>oko.Usuarios</code> table reference
     */
    public Usuarios() {
        this("Usuarios", null);
    }

    /**
     * Create an aliased <code>oko.Usuarios</code> table reference
     */
    public Usuarios(String alias) {
        this(alias, USUARIOS);
    }

    private Usuarios(String alias, Table<UsuariosRecord> aliased) {
        this(alias, aliased, null);
    }

    private Usuarios(String alias, Table<UsuariosRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Oko.OKO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UsuariosRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USUARIOS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UsuariosRecord> getPrimaryKey() {
        return Keys.KEY_USUARIOS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UsuariosRecord>> getKeys() {
        return Arrays.<UniqueKey<UsuariosRecord>>asList(Keys.KEY_USUARIOS_PRIMARY, Keys.KEY_USUARIOS_IDUSUARIO_UNIQUE, Keys.KEY_USUARIOS_EMAIL_UNIQUE, Keys.KEY_USUARIOS_TELEFONO_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Usuarios as(String alias) {
        return new Usuarios(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Usuarios rename(String name) {
        return new Usuarios(name, null);
    }
}
