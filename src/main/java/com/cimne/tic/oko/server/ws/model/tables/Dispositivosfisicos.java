/*
 * This file is generated by jOOQ.
*/
package com.cimne.tic.oko.server.ws.model.tables;


import com.cimne.tic.oko.server.ws.model.Keys;
import com.cimne.tic.oko.server.ws.model.Oko;
import com.cimne.tic.oko.server.ws.model.tables.records.DispositivosfisicosRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dispositivosfisicos extends TableImpl<DispositivosfisicosRecord> {

    private static final long serialVersionUID = 340756978;

    /**
     * The reference instance of <code>oko.DispositivosFisicos</code>
     */
    public static final Dispositivosfisicos DISPOSITIVOSFISICOS = new Dispositivosfisicos();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DispositivosfisicosRecord> getRecordType() {
        return DispositivosfisicosRecord.class;
    }

    /**
     * The column <code>oko.DispositivosFisicos.idDispositivosFisico</code>.
     */
    public final TableField<DispositivosfisicosRecord, Integer> IDDISPOSITIVOSFISICO = createField("idDispositivosFisico", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.DispositivosFisicos.nombre</code>.
     */
    public final TableField<DispositivosfisicosRecord, String> NOMBRE = createField("nombre", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>oko.DispositivosFisicos.token</code>.
     */
    public final TableField<DispositivosfisicosRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false), this, "");

    /**
     * The column <code>oko.DispositivosFisicos.version</code>.
     */
    public final TableField<DispositivosfisicosRecord, String> VERSION = createField("version", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>oko.DispositivosFisicos.fechaInsert</code>.
     */
    public final TableField<DispositivosfisicosRecord, Timestamp> FECHAINSERT = createField("fechaInsert", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>oko.DispositivosFisicos.fechaModificacion</code>.
     */
    public final TableField<DispositivosfisicosRecord, Timestamp> FECHAMODIFICACION = createField("fechaModificacion", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>oko.DispositivosFisicos.idNumeroSerie</code>.
     */
    public final TableField<DispositivosfisicosRecord, Integer> IDNUMEROSERIE = createField("idNumeroSerie", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.DispositivosFisicos.idLocalizacion</code>.
     */
    public final TableField<DispositivosfisicosRecord, Integer> IDLOCALIZACION = createField("idLocalizacion", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>oko.DispositivosFisicos.idEmpresa</code>.
     */
    public final TableField<DispositivosfisicosRecord, Integer> IDEMPRESA = createField("idEmpresa", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>oko.DispositivosFisicos</code> table reference
     */
    public Dispositivosfisicos() {
        this("DispositivosFisicos", null);
    }

    /**
     * Create an aliased <code>oko.DispositivosFisicos</code> table reference
     */
    public Dispositivosfisicos(String alias) {
        this(alias, DISPOSITIVOSFISICOS);
    }

    private Dispositivosfisicos(String alias, Table<DispositivosfisicosRecord> aliased) {
        this(alias, aliased, null);
    }

    private Dispositivosfisicos(String alias, Table<DispositivosfisicosRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Oko.OKO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DispositivosfisicosRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DISPOSITIVOSFISICOS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DispositivosfisicosRecord> getPrimaryKey() {
        return Keys.KEY_DISPOSITIVOSFISICOS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DispositivosfisicosRecord>> getKeys() {
        return Arrays.<UniqueKey<DispositivosfisicosRecord>>asList(Keys.KEY_DISPOSITIVOSFISICOS_PRIMARY, Keys.KEY_DISPOSITIVOSFISICOS_IDDISPOSITIVOSFISICOS_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DispositivosfisicosRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DispositivosfisicosRecord, ?>>asList(Keys.FK_DISPOSITIVOSFISICOS_NUMEROSERIE1, Keys.FK_LOCALIZACION, Keys.FK_EMPRESAMARCO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dispositivosfisicos as(String alias) {
        return new Dispositivosfisicos(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Dispositivosfisicos rename(String name) {
        return new Dispositivosfisicos(name, null);
    }
}
