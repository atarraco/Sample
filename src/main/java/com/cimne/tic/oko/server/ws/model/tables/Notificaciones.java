/*
 * This file is generated by jOOQ.
*/
package com.cimne.tic.oko.server.ws.model.tables;


import com.cimne.tic.oko.server.ws.model.Keys;
import com.cimne.tic.oko.server.ws.model.Oko;
import com.cimne.tic.oko.server.ws.model.tables.records.NotificacionesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Notificaciones extends TableImpl<NotificacionesRecord> {

    private static final long serialVersionUID = -128340148;

    /**
     * The reference instance of <code>oko.Notificaciones</code>
     */
    public static final Notificaciones NOTIFICACIONES = new Notificaciones();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NotificacionesRecord> getRecordType() {
        return NotificacionesRecord.class;
    }

    /**
     * The column <code>oko.Notificaciones.idNotificacion</code>.
     */
    public final TableField<NotificacionesRecord, Integer> IDNOTIFICACION = createField("idNotificacion", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.Notificaciones.status</code>.
     */
    public final TableField<NotificacionesRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.Notificaciones.tipo</code>.
     */
    public final TableField<NotificacionesRecord, Integer> TIPO = createField("tipo", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.Notificaciones.nuevoOKOID</code>.
     */
    public final TableField<NotificacionesRecord, Integer> NUEVOOKOID = createField("nuevoOKOID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>oko.Notificaciones.fechaInsert</code>.
     */
    public final TableField<NotificacionesRecord, Timestamp> FECHAINSERT = createField("fechaInsert", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>oko.Notificaciones.idUsuarioEmisor</code>.
     */
    public final TableField<NotificacionesRecord, Integer> IDUSUARIOEMISOR = createField("idUsuarioEmisor", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.Notificaciones.idUsuarioReceptor</code>.
     */
    public final TableField<NotificacionesRecord, Integer> IDUSUARIORECEPTOR = createField("idUsuarioReceptor", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>oko.Notificaciones</code> table reference
     */
    public Notificaciones() {
        this("Notificaciones", null);
    }

    /**
     * Create an aliased <code>oko.Notificaciones</code> table reference
     */
    public Notificaciones(String alias) {
        this(alias, NOTIFICACIONES);
    }

    private Notificaciones(String alias, Table<NotificacionesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Notificaciones(String alias, Table<NotificacionesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Oko.OKO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<NotificacionesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_NOTIFICACIONES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NotificacionesRecord> getPrimaryKey() {
        return Keys.KEY_NOTIFICACIONES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NotificacionesRecord>> getKeys() {
        return Arrays.<UniqueKey<NotificacionesRecord>>asList(Keys.KEY_NOTIFICACIONES_PRIMARY, Keys.KEY_NOTIFICACIONES_IDNOTIFICACION_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<NotificacionesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<NotificacionesRecord, ?>>asList(Keys.FK_EMISOR, Keys.FK_RECEPTOR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Notificaciones as(String alias) {
        return new Notificaciones(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Notificaciones rename(String name) {
        return new Notificaciones(name, null);
    }
}
