/*
 * This file is generated by jOOQ.
*/
package com.cimne.tic.oko.server.ws.model.tables;


import com.cimne.tic.oko.server.ws.model.Keys;
import com.cimne.tic.oko.server.ws.model.Oko;
import com.cimne.tic.oko.server.ws.model.tables.records.ContenidosmultimediaRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Contenidosmultimedia extends TableImpl<ContenidosmultimediaRecord> {

    private static final long serialVersionUID = -2026125101;

    /**
     * The reference instance of <code>oko.ContenidosMultimedia</code>
     */
    public static final Contenidosmultimedia CONTENIDOSMULTIMEDIA = new Contenidosmultimedia();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContenidosmultimediaRecord> getRecordType() {
        return ContenidosmultimediaRecord.class;
    }

    /**
     * The column <code>oko.ContenidosMultimedia.idContenidoMultimedia</code>.
     */
    public final TableField<ContenidosmultimediaRecord, Integer> IDCONTENIDOMULTIMEDIA = createField("idContenidoMultimedia", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.ContenidosMultimedia.tipo</code>.
     */
    public final TableField<ContenidosmultimediaRecord, Integer> TIPO = createField("tipo", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.ContenidosMultimedia.texto</code>.
     */
    public final TableField<ContenidosmultimediaRecord, String> TEXTO = createField("texto", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false), this, "");

    /**
     * The column <code>oko.ContenidosMultimedia.url</code>.
     */
    public final TableField<ContenidosmultimediaRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false), this, "");

    /**
     * The column <code>oko.ContenidosMultimedia.urlThumbnail</code>.
     */
    public final TableField<ContenidosmultimediaRecord, String> URLTHUMBNAIL = createField("urlThumbnail", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false), this, "");

    /**
     * The column <code>oko.ContenidosMultimedia.fechaInsert</code>.
     */
    public final TableField<ContenidosmultimediaRecord, Timestamp> FECHAINSERT = createField("fechaInsert", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>oko.ContenidosMultimedia.idUsuarioEmisor</code>.
     */
    public final TableField<ContenidosmultimediaRecord, Integer> IDUSUARIOEMISOR = createField("idUsuarioEmisor", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.ContenidosMultimedia.idDispositivoVirtual</code>.
     */
    public final TableField<ContenidosmultimediaRecord, Integer> IDDISPOSITIVOVIRTUAL = createField("idDispositivoVirtual", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.ContenidosMultimedia.idContenidoFisico</code>.
     */
    public final TableField<ContenidosmultimediaRecord, Integer> IDCONTENIDOFISICO = createField("idContenidoFisico", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>oko.ContenidosMultimedia</code> table reference
     */
    public Contenidosmultimedia() {
        this("ContenidosMultimedia", null);
    }

    /**
     * Create an aliased <code>oko.ContenidosMultimedia</code> table reference
     */
    public Contenidosmultimedia(String alias) {
        this(alias, CONTENIDOSMULTIMEDIA);
    }

    private Contenidosmultimedia(String alias, Table<ContenidosmultimediaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Contenidosmultimedia(String alias, Table<ContenidosmultimediaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Oko.OKO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ContenidosmultimediaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONTENIDOSMULTIMEDIA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ContenidosmultimediaRecord> getPrimaryKey() {
        return Keys.KEY_CONTENIDOSMULTIMEDIA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ContenidosmultimediaRecord>> getKeys() {
        return Arrays.<UniqueKey<ContenidosmultimediaRecord>>asList(Keys.KEY_CONTENIDOSMULTIMEDIA_PRIMARY, Keys.KEY_CONTENIDOSMULTIMEDIA_IDCONTENIDOMULTIMEDIA_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ContenidosmultimediaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ContenidosmultimediaRecord, ?>>asList(Keys.FK_USUARIOSEMISOR, Keys.FK_CONTENIDOMULTIMEDIA, Keys.FK_CONTENIDOFISICO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Contenidosmultimedia as(String alias) {
        return new Contenidosmultimedia(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Contenidosmultimedia rename(String name) {
        return new Contenidosmultimedia(name, null);
    }
}
