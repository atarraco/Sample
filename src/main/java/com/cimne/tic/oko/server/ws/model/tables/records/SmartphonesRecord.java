/*
 * This file is generated by jOOQ.
*/
package com.cimne.tic.oko.server.ws.model.tables.records;


import com.cimne.tic.oko.server.ws.model.tables.Smartphones;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartphonesRecord extends UpdatableRecordImpl<SmartphonesRecord> implements Record6<Integer, String, Integer, String, Timestamp, Integer> {

    private static final long serialVersionUID = 1309077265;

    /**
     * Setter for <code>oko.SmartPhones.idSmartPhone</code>.
     */
    public void setIdsmartphone(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>oko.SmartPhones.idSmartPhone</code>.
     */
    public Integer getIdsmartphone() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>oko.SmartPhones.token</code>.
     */
    public void setToken(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>oko.SmartPhones.token</code>.
     */
    public String getToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>oko.SmartPhones.tipo</code>.
     */
    public void setTipo(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>oko.SmartPhones.tipo</code>.
     */
    public Integer getTipo() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>oko.SmartPhones.version</code>.
     */
    public void setVersion(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>oko.SmartPhones.version</code>.
     */
    public String getVersion() {
        return (String) get(3);
    }

    /**
     * Setter for <code>oko.SmartPhones.fechaInsert</code>.
     */
    public void setFechainsert(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>oko.SmartPhones.fechaInsert</code>.
     */
    public Timestamp getFechainsert() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>oko.SmartPhones.idUsuario</code>.
     */
    public void setIdusuario(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>oko.SmartPhones.idUsuario</code>.
     */
    public Integer getIdusuario() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Integer, String, Timestamp, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Integer, String, Timestamp, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Smartphones.SMARTPHONES.IDSMARTPHONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Smartphones.SMARTPHONES.TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Smartphones.SMARTPHONES.TIPO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Smartphones.SMARTPHONES.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Smartphones.SMARTPHONES.FECHAINSERT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Smartphones.SMARTPHONES.IDUSUARIO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdsmartphone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getTipo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getFechainsert();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getIdusuario();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmartphonesRecord value1(Integer value) {
        setIdsmartphone(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmartphonesRecord value2(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmartphonesRecord value3(Integer value) {
        setTipo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmartphonesRecord value4(String value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmartphonesRecord value5(Timestamp value) {
        setFechainsert(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmartphonesRecord value6(Integer value) {
        setIdusuario(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmartphonesRecord values(Integer value1, String value2, Integer value3, String value4, Timestamp value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SmartphonesRecord
     */
    public SmartphonesRecord() {
        super(Smartphones.SMARTPHONES);
    }

    /**
     * Create a detached, initialised SmartphonesRecord
     */
    public SmartphonesRecord(Integer idsmartphone, String token, Integer tipo, String version, Timestamp fechainsert, Integer idusuario) {
        super(Smartphones.SMARTPHONES);

        set(0, idsmartphone);
        set(1, token);
        set(2, tipo);
        set(3, version);
        set(4, fechainsert);
        set(5, idusuario);
    }
}
