/*
 * This file is generated by jOOQ.
*/
package com.cimne.tic.oko.server.ws.model.tables;


import com.cimne.tic.oko.server.ws.model.Keys;
import com.cimne.tic.oko.server.ws.model.Oko;
import com.cimne.tic.oko.server.ws.model.tables.records.UsuariosdispositivosvirtualesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Usuariosdispositivosvirtuales extends TableImpl<UsuariosdispositivosvirtualesRecord> {

    private static final long serialVersionUID = 2125319526;

    /**
     * The reference instance of <code>oko.UsuariosDispositivosVirtuales</code>
     */
    public static final Usuariosdispositivosvirtuales USUARIOSDISPOSITIVOSVIRTUALES = new Usuariosdispositivosvirtuales();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UsuariosdispositivosvirtualesRecord> getRecordType() {
        return UsuariosdispositivosvirtualesRecord.class;
    }

    /**
     * The column <code>oko.UsuariosDispositivosVirtuales.idUsuariosDispositivosVirtual</code>.
     */
    public final TableField<UsuariosdispositivosvirtualesRecord, Integer> IDUSUARIOSDISPOSITIVOSVIRTUAL = createField("idUsuariosDispositivosVirtual", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.UsuariosDispositivosVirtuales.rol</code>.
     */
    public final TableField<UsuariosdispositivosvirtualesRecord, Integer> ROL = createField("rol", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.UsuariosDispositivosVirtuales.idUsuario</code>.
     */
    public final TableField<UsuariosdispositivosvirtualesRecord, Integer> IDUSUARIO = createField("idUsuario", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.UsuariosDispositivosVirtuales.idDispositivoVirtual</code>.
     */
    public final TableField<UsuariosdispositivosvirtualesRecord, Integer> IDDISPOSITIVOVIRTUAL = createField("idDispositivoVirtual", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>oko.UsuariosDispositivosVirtuales</code> table reference
     */
    public Usuariosdispositivosvirtuales() {
        this("UsuariosDispositivosVirtuales", null);
    }

    /**
     * Create an aliased <code>oko.UsuariosDispositivosVirtuales</code> table reference
     */
    public Usuariosdispositivosvirtuales(String alias) {
        this(alias, USUARIOSDISPOSITIVOSVIRTUALES);
    }

    private Usuariosdispositivosvirtuales(String alias, Table<UsuariosdispositivosvirtualesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Usuariosdispositivosvirtuales(String alias, Table<UsuariosdispositivosvirtualesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Oko.OKO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UsuariosdispositivosvirtualesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USUARIOSDISPOSITIVOSVIRTUALES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UsuariosdispositivosvirtualesRecord> getPrimaryKey() {
        return Keys.KEY_USUARIOSDISPOSITIVOSVIRTUALES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UsuariosdispositivosvirtualesRecord>> getKeys() {
        return Arrays.<UniqueKey<UsuariosdispositivosvirtualesRecord>>asList(Keys.KEY_USUARIOSDISPOSITIVOSVIRTUALES_PRIMARY, Keys.KEY_USUARIOSDISPOSITIVOSVIRTUALES_IDUSUARIOSDISPOSITIVOSVIRTUAL_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UsuariosdispositivosvirtualesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UsuariosdispositivosvirtualesRecord, ?>>asList(Keys.FK_USUARIOSDISPVIRTUALES, Keys.FK_DISPOSITIVOSVIRTUALES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Usuariosdispositivosvirtuales as(String alias) {
        return new Usuariosdispositivosvirtuales(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Usuariosdispositivosvirtuales rename(String name) {
        return new Usuariosdispositivosvirtuales(name, null);
    }
}
