/*
 * This file is generated by jOOQ.
*/
package com.cimne.tic.oko.server.ws.model.tables;


import com.cimne.tic.oko.server.ws.model.Keys;
import com.cimne.tic.oko.server.ws.model.Oko;
import com.cimne.tic.oko.server.ws.model.tables.records.EmpresaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Empresa extends TableImpl<EmpresaRecord> {

    private static final long serialVersionUID = -530287117;

    /**
     * The reference instance of <code>oko.Empresa</code>
     */
    public static final Empresa EMPRESA = new Empresa();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmpresaRecord> getRecordType() {
        return EmpresaRecord.class;
    }

    /**
     * The column <code>oko.Empresa.idEmpresa</code>.
     */
    public final TableField<EmpresaRecord, Integer> IDEMPRESA = createField("idEmpresa", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.Empresa.nombre</code>.
     */
    public final TableField<EmpresaRecord, String> NOMBRE = createField("nombre", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>oko.Empresa</code> table reference
     */
    public Empresa() {
        this("Empresa", null);
    }

    /**
     * Create an aliased <code>oko.Empresa</code> table reference
     */
    public Empresa(String alias) {
        this(alias, EMPRESA);
    }

    private Empresa(String alias, Table<EmpresaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Empresa(String alias, Table<EmpresaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Oko.OKO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EmpresaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMPRESA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmpresaRecord> getPrimaryKey() {
        return Keys.KEY_EMPRESA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmpresaRecord>> getKeys() {
        return Arrays.<UniqueKey<EmpresaRecord>>asList(Keys.KEY_EMPRESA_PRIMARY, Keys.KEY_EMPRESA_IDEMPRESA_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Empresa as(String alias) {
        return new Empresa(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Empresa rename(String name) {
        return new Empresa(name, null);
    }
}
