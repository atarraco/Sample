/*
 * This file is generated by jOOQ.
*/
package com.cimne.tic.oko.server.ws.model.tables;


import com.cimne.tic.oko.server.ws.model.Keys;
import com.cimne.tic.oko.server.ws.model.Oko;
import com.cimne.tic.oko.server.ws.model.tables.records.UsuarioscontactosRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Usuarioscontactos extends TableImpl<UsuarioscontactosRecord> {

    private static final long serialVersionUID = -1467505939;

    /**
     * The reference instance of <code>oko.UsuariosContactos</code>
     */
    public static final Usuarioscontactos USUARIOSCONTACTOS = new Usuarioscontactos();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UsuarioscontactosRecord> getRecordType() {
        return UsuarioscontactosRecord.class;
    }

    /**
     * The column <code>oko.UsuariosContactos.idUsuariosContactos</code>.
     */
    public final TableField<UsuarioscontactosRecord, Integer> IDUSUARIOSCONTACTOS = createField("idUsuariosContactos", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.UsuariosContactos.estado</code>.
     */
    public final TableField<UsuarioscontactosRecord, Integer> ESTADO = createField("estado", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.UsuariosContactos.telefoo</code>.
     */
    public final TableField<UsuarioscontactosRecord, String> TELEFOO = createField("telefoo", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>oko.UsuariosContactos.idUsuario</code>.
     */
    public final TableField<UsuarioscontactosRecord, Integer> IDUSUARIO = createField("idUsuario", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>oko.UsuariosContactos.idUsuarioContacto</code>.
     */
    public final TableField<UsuarioscontactosRecord, Integer> IDUSUARIOCONTACTO = createField("idUsuarioContacto", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>oko.UsuariosContactos</code> table reference
     */
    public Usuarioscontactos() {
        this("UsuariosContactos", null);
    }

    /**
     * Create an aliased <code>oko.UsuariosContactos</code> table reference
     */
    public Usuarioscontactos(String alias) {
        this(alias, USUARIOSCONTACTOS);
    }

    private Usuarioscontactos(String alias, Table<UsuarioscontactosRecord> aliased) {
        this(alias, aliased, null);
    }

    private Usuarioscontactos(String alias, Table<UsuarioscontactosRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Oko.OKO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UsuarioscontactosRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USUARIOSCONTACTOS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UsuarioscontactosRecord> getPrimaryKey() {
        return Keys.KEY_USUARIOSCONTACTOS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UsuarioscontactosRecord>> getKeys() {
        return Arrays.<UniqueKey<UsuarioscontactosRecord>>asList(Keys.KEY_USUARIOSCONTACTOS_PRIMARY, Keys.KEY_USUARIOSCONTACTOS_IDUSUARIOSCONTACTOS_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UsuarioscontactosRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UsuarioscontactosRecord, ?>>asList(Keys.FK_USUARIOS, Keys.FK_USUARIOSCONTACTOS_USUARIOS1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Usuarioscontactos as(String alias) {
        return new Usuarioscontactos(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Usuarioscontactos rename(String name) {
        return new Usuarioscontactos(name, null);
    }
}
